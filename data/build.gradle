plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.github.ben-manes.versions' version "0.38.0"
}

android {
    namespace "com.project.noticeme.data"
    compileSdkVersion Config.compileSdkVersion

    defaultConfig {
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental": "true",
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    lintOptions {
        abortOnError false
        disable 'UnsafeExperimentalUsageError', 'UnsafeExperimentalUsageWarning', 'ContentDescription'
    }
    buildFeatures {
        buildConfig = true
    }
}

dependencies {
    implementation Libs.kotlinStdLib
    implementation Libs.appcompat

    // Coroutine
    implementation Libs.coroutineAndroid
    implementation Libs.coroutineCore

    // Square
    implementation Libs.retrofit
    implementation Libs.gson

    // Debug
    implementation Libs.timber
    implementation Libs.sentry

    // Dagger-hilt
    implementation Libs.hiltAndroid
    testImplementation 'org.testng:testng:6.9.6'
    kapt Libs.hiltAndroidCompiler

    // Room
    implementation Libs.roomRuntime
    implementation Libs.roomKtx
    kapt Libs.roomCompiler
}

kapt {
    correctErrorTypes true
    useBuildCache true
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}