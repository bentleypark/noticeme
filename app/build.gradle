plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.github.ben-manes.versions' version "0.33.0"
}

//apply from: "${rootProject.projectDir}/flavors.gradle"

android {
    compileSdkVersion Config.compileSdkVersion
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.project.noticeme"
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    with flavorConfig

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    lintOptions {
        abortOnError false
        disable 'UnsafeExperimentalUsageError', 'UnsafeExperimentalUsageWarning', 'ContentDescription'
    }
}

dependencies {
    implementation project(Modules.commonUi)
    implementation project(Modules.commonUtils)

    implementation Libs.kotlinStdLib
    implementation Libs.appcompat
    implementation Libs.coreKtx
    implementation Libs.constraintlayout
    implementation Libs.material

    testImplementation Libs.junit4
    androidTestImplementation Libs.junitExt
    androidTestImplementation Libs.espressoCore
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}