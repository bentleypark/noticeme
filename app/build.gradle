plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.github.ben-manes.versions' version "0.34.0"
}

//apply from: "${rootProject.projectDir}/flavors.gradle"

android {
    compileSdkVersion Config.compileSdkVersion
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.project.noticeme"
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    with flavorConfig

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    lintOptions {
        abortOnError false
        disable 'UnsafeExperimentalUsageError', 'UnsafeExperimentalUsageWarning', 'ContentDescription'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(Modules.commonUi)
    implementation project(Modules.commonUtils)
    implementation project(Modules.data)

    implementation Libs.kotlinStdLib
    implementation Libs.coroutineCore
    implementation Libs.coroutineAndroid

    implementation Libs.appcompat
    implementation Libs.coreKtx
    implementation Libs.constraintlayout
    implementation Libs.material
    implementation Libs.activity
    implementation Libs.activityKtx
    implementation Libs.legacySupport
    implementation Libs.recyclerview

    implementation Libs.lifeCyle
    implementation Libs.viewModel
    implementation Libs.liveData

    implementation Libs.startUp
    implementation Libs.navUi
    implementation Libs.navUiKtx
    implementation Libs.navFragment
    implementation Libs.navFragmentKtx

    implementation Libs.retrofit
    implementation Libs.gson
    implementation Libs.gsonConverter
    implementation Libs.okhttp
    implementation Libs.loggingInterceptor

    implementation Libs.hiltAndroid
    implementation Libs.hiltViewModel
    kapt Libs.hiltAndroidCompiler
    kapt Libs.hiltCompiler

    // Room
    implementation Libs.roomRuntime
    implementation Libs.roomKtx
    kapt Libs.roomCompiler

    implementation Libs.timber
    implementation Libs.stetho
    implementation Libs.stethoOkhttp3
//    debugImplementation Libs.leakcanary

    implementation Libs.admob

    testImplementation Libs.junit4
    androidTestImplementation Libs.junitExt
    androidTestImplementation Libs.espressoCore
}

kapt {
    correctErrorTypes true
}

androidExtensions {
    experimental = true
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

//apply plugin: 'com.google.gms.google-services'